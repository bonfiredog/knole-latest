<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMicVolumePlaceholderSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = WeatherLayer
if mWeatherSubController.SimpleWindD = -1 {
x = room_width + 250
Side = "Left"
} else if mWeatherSubController.SimpleWindD = 1 {
x = -250
Side = "Right"
}
y = 350
alarm[0] = mWeatherSubController.CloudEmitterRate
alarm[1] = mWeatherSubController.CloudEmitterNextRate
alarm[2] = 900
CurrentWTPercentThrough = 0
CloudNumberCap = 40
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing Sides If WindD Changes

if mWeatherSubController.SimpleWindD = -1 {
x = room_width + 250
Side = "Left"
} else if mWeatherSubController.SimpleWindD = 1 {
x = -250
Side = "Right"
}

alarm[2] = 900
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Emitting Clouds At Next Rate
if mWeatherSubController.WeatherOn = true {
if mWorldController.NextPeriodWT = 2
or mWorldController.NextPeriodWT = 3
or mWorldController.NextPeriodWT = 7
or mWorldController.NextPeriodWT = 8
or mWorldController.NextPeriodWT = 9
or mWorldController.NextPeriodWT = 10
or mWorldController.NextPeriodWT = 11
or mWorldController.NextPeriodWT = 12
or mWorldController.NextPeriodWT = 13
or mWorldController.NextPeriodWT = 14
or mWorldController.NextPeriodWT = 15
or mWorldController.NextPeriodWT = 16
or mWorldController.NextPeriodWT = 17
or mWorldController.NextPeriodWT = 18
or mWorldController.NextPeriodWT = 19
or mWorldController.NextPeriodWT = 20
or mWorldController.NextPeriodWT = 21
or mWorldController.NextPeriodWT = 22
or mWorldController.NextPeriodWT = 23
or mWorldController.NextPeriodWT = 24
or mWorldController.NextPeriodWT = 25
or mWorldController.NextPeriodWT = 26
or mWorldController.NextPeriodWT = 27
or mWorldController.NextPeriodWT = 28
or mWorldController.NextPeriodWT = 29
or mWorldController.NextPeriodWT = 30
and CurrentWTPercentThrough &gt; 50
and instance_number(oCloud) &lt;= CloudNumberCap
{
instance_create(x,y,oCloud)

ModEmitterRateNext = irandom_range(mWeatherSubController.CloudEmitterNextRate - (mWeatherSubController.CloudEmitterNextRate / 4), mWeatherSubController.CloudEmitterNextRate + (mWeatherSubController.CloudEmitterNextRate / 4))
if CurrentWTPercentThrough &lt;= 50 {
alarm[1] = (ModEmitterRateNext / 100) * (CurrentWTPercentThrough - 50)
}

if alarm[1] &lt; 0 {
alarm[1] = 0
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Emitting Current Clouds At Current Rate
if mWeatherSubController.WeatherOn = true {
if mWorldController.ThisPeriodWT = 2
or mWorldController.ThisPeriodWT = 3
or mWorldController.ThisPeriodWT = 7
or mWorldController.ThisPeriodWT = 8
or mWorldController.ThisPeriodWT = 9
or mWorldController.ThisPeriodWT = 10
or mWorldController.ThisPeriodWT = 11
or mWorldController.ThisPeriodWT = 12
or mWorldController.ThisPeriodWT = 13
or mWorldController.ThisPeriodWT = 14
or mWorldController.ThisPeriodWT = 15
or mWorldController.ThisPeriodWT = 16
or mWorldController.ThisPeriodWT = 17
or mWorldController.ThisPeriodWT = 18
or mWorldController.ThisPeriodWT = 19
or mWorldController.ThisPeriodWT = 20
or mWorldController.ThisPeriodWT = 21
or mWorldController.ThisPeriodWT = 22
or mWorldController.ThisPeriodWT = 23
or mWorldController.ThisPeriodWT = 24
or mWorldController.ThisPeriodWT = 25
or mWorldController.ThisPeriodWT = 26
or mWorldController.ThisPeriodWT = 27
or mWorldController.ThisPeriodWT = 28
or mWorldController.ThisPeriodWT = 29
or mWorldController.ThisPeriodWT = 30

and instance_number(oCloud) &lt;= CloudNumberCap
{
instance_create(x,y,oCloud)


ModEmitterRate = irandom_range(mWeatherSubController.CloudEmitterRate - (mWeatherSubController.CloudEmitterRate / 4), mWeatherSubController.CloudEmitterRate + (mWeatherSubController.CloudEmitterRate / 4))


if CurrentWTPercentThrough &lt;= 50 {
alarm[0] = (ModEmitterRate / 100) * (CurrentWTPercentThrough * 2)
} else if CurrentWTPercentThrough &gt;= 50 {
alarm[0] = (ModEmitterRate / 100) * ((100 - CurrentWTPercentThrough) * 2)
}
if alarm[0] &lt; 0 {
alarm[0] = 0
}


}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Percentage Through Current WT

CurrentWTPercentThrough = (mWorldController.CurrentWTMod / 180) * 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
