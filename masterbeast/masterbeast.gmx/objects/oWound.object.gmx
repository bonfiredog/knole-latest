<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWound1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mWoundParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
event_inherited()
Sprite = choose(sWound1,sWound2,sWound3)

switch Sprite {
case sWound1:
ScarSprite = sWoundScar1
break;
case sWound2:
ScarSprite = sWoundScar2
break;
case sWound3:
ScarSprite = sWoundScar3
break;
}


OriginalX = x
OriginalY = y
OriginalAngle = image_angle
Width = 0
TopYScale = 4 + ((6 / 200) * mInterfaceController.CutDistance)
GrownToSize = false
ScabGrown = false
ScabAlpha = 0
CurrentAlpha = 1
BleedTimer = random_range(600,1000)
NumberPresent = 0
ThresholdNumber = 1
BloodTimer = 0
On = "none"
Path = path_add()
Bleeds = 0
depth = HeadSkinLayer
TouchReset = true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grow Y Scale, Reset Wound Engine

event_inherited()

if GrownToSize = false {
if Width &lt; TopYScale {
Width += 0.5
if Width &gt; (TopYScale / 2) {
if mInterfaceController.DrawingPath = true {
mInterfaceController.DrawingPath = false
}
}
} else {
GrownToSize = true
GetBounds()
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bleeding And Dripping

if GrownToSize = true {
if ScabAlpha &lt;= 0.5 {
if BloodTimer &gt; 0 {
BloodTimer -= 1 
} else if BloodTimer &lt;= 0 {
PosX = random_range(LeftBound,RightBound)
PosY = random_range(TopBound,BottomBound)
if position_meeting(PosX,PosY,self) {
MakeDripSound(x,y)
ThisDrip = instance_create(x,y,mDripBlood)
ThisDrip.image_xscale = random_range(0.3,0.4)
ThisDrip.image_yscale = ThisDrip.image_xscale
}
BloodTimer = irandom_range(mCreatureController.BTLower,mCreatureController.BTHigher)
}
} else {
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving With Body Parts

if On = "browleft" {
x = OriginalX + oBrowLeft.XDifference
y = OriginalY + oBrowLeft.YDifference
image_angle = OriginalAngle + oBrowLeft.RotateDifference
} else if On = "browright" {
x = OriginalX + oBrowRight.XDifference
y = OriginalY + oBrowRight.YDifference
image_angle = OriginalAngle + oBrowRight.RotateDifference
} else if On = "nose" {
x = OriginalX + oNose1.XDifference
y = OriginalY + oNose1.YDifference
} else if On = "cheekleft" {
x = OriginalX + oCheekLeft.XDifference
y = OriginalY + oCheekLeft.YDifference
image_angle = OriginalAngle + oCheekLeft.RotateDifference
} else if On = "cheekright" {
x = OriginalX + oCheekRight.XDifference
y = OriginalY + oCheekRight.YDifference
image_angle = OriginalAngle + oCheekRight.RotateDifference
} else if On = "skin" {
x = OriginalX + oHead2.XDifference
y = OriginalY + oHead2.YDifference
} else if On = "caulbowl" {
x = OriginalX + oCaulBowl.XDifference
y = OriginalY + oCaulBowl.YDifference
} else if On = "cauljug" {
x = OriginalX + oCaulJug.XDifference
y = OriginalY + oCaulJug.YDifference
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Growing Scab, Then Fading And Destroying

if GrownToSize = true {
if ScabGrown = false {
if ScabAlpha &lt; 1 {
ScabAlpha += (0.000001)
} else {
ScabGrown = true
}
} else if ScabGrown = true {
if CurrentAlpha &gt; 0 {
CurrentAlpha -= (0.000001)
} else {
instance_destroy()
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touching With Sound

if instance_exists(mFinger) and AmountForward(80) and instance_exists(mDebug) = false and place_meeting(mFinger.x,mFinger.y,self) and ScabAlpha &lt; 0.5 and TouchReset = true {
TouchReset = false
TouchSound = choose("wetmouth1","wetmouth2","wetmouth3","wetmouth4","wetmouth5","wetmouth6","wetmouth7")
ex_audio_set_volume(TouchSound,BothVolMod(0.3),0)
ex_audio_set_position(TouchSound,mouse_x,mouse_y,1)
ex_audio_set_pitch(TouchSound,random_range(0.8,1.2))
ex_audio_play(TouchSound,0)
TouchLiquid("blood")
} else {
if TouchReset = false {
TouchReset = true
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self To Path And Scab To Path

if ScabGrown = false {
DrawPathSprite(
Path,
0,
0,
Width,
Sprite,
0,
1,
1,
c_white,
CurrentAlpha,
8,
false
)
}

DrawPathSprite(
Path,
0,
0,
Width,
ScarSprite,
0,
1,
1,
c_white,
ScabAlpha,
8,
false
)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
