<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBottomHeadDripObj</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
depth = EarLayer
OriginalXScale = image_xscale
OriginalYScale = image_yscale
DripTimer = 0
image_alpha = 1

PartCaulSys = part_system_create()
part_system_depth(PartCaulSys,depth)

//Define Different Particles Based On Liquid Type
CaulPart = part_type_create()
part_type_sprite(CaulPart,sSplash1,1,0,0)
part_type_size(CaulPart,0.1,0.3,-0.01,0.01)
part_type_colour1(CaulPart,BloodLiquidColour)
part_type_alpha1(CaulPart,1)
part_type_speed(CaulPart,1,3,0,0)
part_type_direction(CaulPart,200,340,0,0)
part_type_gravity(CaulPart,3,270)
part_type_blend(CaulPart,0)
part_type_life(CaulPart,1000,1500)

TouchingMe = false

CaulEmit = part_emitter_create(PartCaulSys)
part_emitter_region(PartCaulSys,CaulEmit,x - (oCaulJug.sprite_width / 2),x + (oCaulJug.sprite_width / 2),
y - (oCaulJug.sprite_height / 2),y + (oCaulJug.sprite_height / 2),ps_shape_ellipse,ps_distr_gaussian)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dripping

if DripTimer &gt; 0 {
DripTimer -= 1
} else if DripTimer &lt;= 0 {
PosX = random_range(x - (sprite_width / 2), x + (sprite_width / 2))
BottomDrop = instance_create(PosX,y,mDripBlood)
MakeDripSound(PosX,y)
BottomDrop.depth = depth
BottomDrop.image_xscale = random_range(0.3,0.5)
BottomDrop.image_yscale = BottomDrop.image_xscale
DripTimer = (random_range(8,40) + (60 * ((5 / 100) * (100 - mCreatureController.Alive))))
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///In Line With Head

x = OriginalX + oHead3.XDifference
y = OriginalY + oHead3.YDifference
image_xscale = OriginalXScale + oHead3.XScaleDifference
image_yscale = OriginalYScale + oHead3.YScaleDifference
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touching

if instance_exists(mFinger) and place_meeting(x,y,mFinger) {
if TouchingMe = false {
TouchBottomDripInitial()
TouchingMe = true
} else {
TouchBottomDripReactions()
}
} else {
if TouchingMe = true {
TouchingMe = false 
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
