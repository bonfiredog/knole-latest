<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTLNostrilSocket</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mNoseParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
OriginalXScale = image_xscale
BaseXScale = OriginalXScale
OriginalYScale = image_yscale
depth = NostrilLayer
Parent = oNose1
OriginalRotation = 176.10
BaseDirection = OriginalRotation
direction = OriginalRotation
image_angle = direction

//Limits
XLeftLimit = OriginalX - 30
XRightLimit = OriginalX + 30
YUpLimit = OriginalY - 30
YDownLimit = OriginalY + 30

XScaleUpLimit = OriginalXScale + 0.05
XScaleDownLimit = OriginalXScale - 0.05
YScaleUpLimit = OriginalYScale + 0.05
YScaleDownLimit = OriginalYScale - 0.05

RotateLimit = 19.1

//Relatives 
XDifference = 0
YDifference = 0
XScaleDifference = 0
YScaleDifference = 0
RotateDifference = 0

//Wrinkles

WrinkleBaseSize = 0
WrinkleTopSize = 0.3
WrinkleBaseRotate = 176.10
WrinkleTopRotate = 176.10 - RotateLimit

WrinkleYWithScaleAmount = 30

Redness = 0
BreathingMod = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep In Line With Parent

BaseX = OriginalX + (Parent.XDifference / 2)

if oNose1.image_xscale &gt; oNose1.OriginalXScale {
AddX = ((10/100) * oNose1.ScaleOutPercentage) * -1
} else if oNose1.image_xscale &lt; oNose1.OriginalXScale {
AddX = (10/100) * oNose1.ScaleInPercentage
} else if oNose1.image_xscale = oNose1.OriginalXScale {
AddX = 0
}

x = BaseX + AddX
y = OriginalY + (Parent.YDifference / 2)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculating Differences &amp; Setting Position

if mBehavioursReactive.BreathingType = "both" or mBehavioursReactive.BreathingType = "nose" {
Breathing()
} else {
if BreathingMod &gt; 0 {
BreathingMod -= 5
} else {
BreathingMod = 0
}
}

direction = BaseDirection - oNose1.HappyModFlareUp - oNose1.AngryModFlareUp - oNose1.LustModFlareUp - oNose1.SurpriseModFlareUp - oNose1.PainModFlareUp - oNose1.FearModFlareUp - ((20 / 100) * mBehavioursReactive.SniffingMod) - ((20 / 100) * mBehavioursReactive.TwitchingMod) - ((20 / 100) * BreathingMod)
image_xscale = BaseXScale + oNose1.HappyModFlareSize + oNose1.AngryModFlareSize + oNose1.LustModFlareSize + oNose1.SurpriseModFlareSize + oNose1.PainModFlareSize + oNose1.FearModFlareSize + ((0.05 / 100) * mBehavioursReactive.SniffingMod) + ((0.05 / 100) * mBehavioursReactive.TwitchingMod) + ((0.05 / 100) * BreathingMod)
image_yscale = image_xscale

Redness = clamp(Redness,0,0.6)
x = clamp(x,XLeftLimit,XRightLimit)
y = clamp(y,YUpLimit,YDownLimit)
image_xscale = clamp(image_xscale,XScaleDownLimit,XScaleUpLimit)
image_yscale = clamp(image_yscale,YScaleDownLimit,YScaleUpLimit)
direction = clamp(direction,(OriginalRotation-RotateLimit),OriginalRotation)
image_angle = direction

XDifference = x - OriginalX
YDifference = y - OriginalY
if y &lt;= OriginalY {
YUpPercentageDiff = (OriginalY - y) / (OriginalY - YUpLimit) * 100
} else {
YUpPercentageDiff = 0
}
XScaleDifference = image_xscale - OriginalXScale
YScaleDifference = image_yscale - OriginalYScale
YScalePercentDiff = (YScaleDifference / (YScaleUpLimit - OriginalYScale)) * 100


RotateDifference = OriginalRotation - direction
RotatePercentageDiff = RotateDifference / RotateLimit * 100




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite &amp; Redness
draw_sprite_ext(sTLNostrilSocket,1,x - 7 - ((7 / 100) * RotatePercentageDiff),
y + 7 + ((7 / 100) * RotatePercentageDiff),image_xscale,image_yscale,image_angle,c_black,0.5)
draw_self()
draw_sprite_ext(sTLNostrilRed,0,x,y,image_xscale,image_yscale,image_angle,DebugRedTextColour,Redness)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
