<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCaulLiquid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mCaulParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

event_inherited()
OriginalX = x
OriginalY = y
OriginalXScale = image_xscale
OriginalYScale = image_yscale
LiquidY = 0
PreviousY = 0
depth = CaulLayer - 0.009
CurrentColour = DebugRedTextColour
CurrentBrewIngredients = ""
TargetLiquidLevel = 0
LiquidHeight = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Splash If Object Touches Water &amp; Is Above Certain Level, &amp; Add To Brew

TouchingObject = instance_place(x,y,mDropperParent)

if TouchingObject != noone and TouchingObject.Held = false and LiquidY &gt; 40  {

if LiquidY &gt; 40 and TouchingObject != oPepperArea {
CreateParticleSplash(TouchingObject.x,TouchingObject.y + 40,TouchingObject.sprite_width,
ps_shape_ellipse,ps_distr_gaussian,CurrentColour,5,15,0.05,0.1,30,160,60,120,0.5,40)
}
SplashSound = choose("splash1","splash2","splash3","splash4","splash5","splash6")
ex_audio_set_position(SplashSound,x,y,1)
ex_audio_set_volume(SplashSound,BothVolMod(0.03),0)
ex_audio_play(SplashSound,0)

TouchingObject.image_alpha = 0
TouchingObject.depth = oCaulJug.depth + 0.01
TouchingObject.speed = 0
TouchingObject.Name = object_get_name(TouchingObject.object_index)

WriteToLog("Added " + string(TouchingObject.Name) + "to cauldron brew.")

switch TouchingObject.Name {
case "oGound":
CurrentBrewIngredients = CurrentBrewIngredients + "gound"
break;
case "sSigilMolePicked":
CurrentBrewIngredients = CurrentBrewIngredients + "sigilmole"
break;
case "mDirt":
CurrentBrewIngredients = CurrentBrewIngredients + "dirt"
break;
case "mRainWater":
CurrentBrewIngredients = CurrentBrewIngredients + "rain"
break;
case "mDrool":
CurrentBrewIngredients = CurrentBrewIngredients + "drool"
break;
case "mBlood":
CurrentBrewIngredients = CurrentBrewIngredients + "blood"
break;
case "mTear":
CurrentBrewIngredients = CurrentBrewIngredients + "tear"
break;
case "mSnot":
CurrentBrewIngredients = CurrentBrewIngredients + "snot"
break;
case "mFurPlucked":
CurrentBrewIngredients = CurrentBrewIngredients + "fur"
break;
case "mDripBlood":
CurrentBrewIngredients = CurrentBrewIngredients + "blood"
break;
case "oPepperArea":
CurrentBrewIngredients = CurrentBrewIngredients + "pepper"
break;
case "oMoleHerd":
CurrentBrewIngredients = CurrentBrewIngredients + "herdmole"
break;
case "oCaulCankerCentral":
CurrentBrewIngredients = CurrentBrewIngredients + "canker"
}
with TouchingObject {
instance_destroy()
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lower Liquid Y If Some Target Left

if TargetLiquidLevel &gt; 0 {
LiquidY -= 20
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Positions &amp; Scales &amp; Clampings

event_inherited()

if instance_exists(oCaulJug){
x = OriginalX + oCaulJug.ShakeDiff
y = OriginalY - MouthYDiff - LiquidY + ((35.5 / 100) * oMouthCentre.PercentageDiff) + ((35.5 / 100) * oCaulJug.EngorgedPercentage)
image_xscale = OriginalXScale + ((0.01 / 100) * oMouthCentre.PercentageDiff) + ((0.01 / 100) * oCaulJug.EngorgedPercentage)
image_yscale = OriginalYScale + ((0.01 / 100) * oMouthCentre.PercentageDiff) + ((0.01 / 100) * oCaulJug.EngorgedPercentage)
LiquidY = ((70 / 100) * mCreatureController.Lust) + ((10 / 100) * mWorldController.MoonLustMod)
}

LiquidY = clamp(LiquidY,0,80)
TargetLiquidLevel = clamp(TargetLiquidLevel,0,80)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If Touch And High Enough, Splash And Make Finger Wet With Contents

if position_meeting(mouse_x,mouse_y,self) and mouse_check_button(mb_any)
and position_meeting(mouse_x,mouse_y,oCaulJug) = false and AmountForward(70) {
CreateParticleSplash(mouse_x,mouse_y,5,
ps_shape_ellipse,ps_distr_gaussian,CurrentColour,5,15,0.05,0.1,30,160,60,120,0.5,40)
TouchLiquid("rennet")
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Raising Water and Lust with Touches

if position_meeting(mouse_x,mouse_y,oCaulLip) and AmountForward(70)
and mInterfaceController.DragBegun = true
and mInterfaceController.DragSpeed &gt; 0
{
mCreatureController.BaseLust += ((0.03 / 80) * mWorldController.MoonLustMod)
oCaulJug.EngorgedPercentage += ((0.4 / 80) * mWorldController.MoonLustMod)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Liquid Filling Sounds

if ex_audio_is_playing("alfill") = false {
ex_audio_play("alfill",1)
}
ex_audio_set_position("alfill",x,y,1)
ex_audio_set_volume("alfill",InVolMod(0 + ((0.005 / 73) * LiquidY)),0)
ex_audio_set_pitch("alfill",0.7 + ((0.3 / 73) * LiquidY))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self And Colour

draw_sprite_ext(sCaulLiquid,0,x,y,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sCaulLiquid,0,x,y,image_xscale,image_yscale,image_angle,CurrentColour,0.4)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
