<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFogMistGradient</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = WeatherLayer
x = room_width / 2
y = room_height
image_xscale = 2

image_alpha = 0
MetaAlpha = 0
MetaAlphaNext = 1

Rate = 0.001
TargetAlpha = 0.5
OsAlpha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Alpha Slowly Up &amp; Down Within Bounds, While Setting MetaAlpha
//(i.e. oscillate between 0 and the highest alpha it can be, depending on how far through 
//either the morning mist or WeatherMod we are).

if mWeatherSubController.WeatherOn = true {

//For Morning Mist

if mWeatherSubController.MistSet = true and mWeatherSubController.MorningMist = true {
if mWeatherSubController.CurrentMistMinute &lt;= 45 {
MetaAlpha = 1 / 45 * mWeatherSubController.CurrentMistMinute
} else if mWeatherSubController.CurrentMistMinute &gt; 45 {
MetaAlpha = 1 - ((1 / 45) * (mWeatherSubController.CurrentMistMinute - 45))
} else if mWeatherSubController.CurrentMistMinute &gt; 90 {
instance_destroy()
}
//Oscillation Code

if OsAlpha != TargetAlpha {
if TargetAlpha &lt; OsAlpha {
OsAlpha = OsAlpha - Rate
} else if TargetAlpha &gt; OsAlpha {
OsAlpha = OsAlpha + Rate
}
} else if OsAlpha = TargetAlpha {
TargetAlpha = random_range(0.2,0.8)
}

image_alpha = OsAlpha * MetaAlpha

} else {

//For Other Times

if mWeatherSubController.FogMistInProgress = true {
//Current Period
if mWorldController.ThisPeriodWT = 5 or mWorldController.ThisPeriodWT = 6 {
if mWeatherSubController.CurrentWeatherMod &lt;= 90 {
MetaAlpha = (1 / 90) * mWeatherSubController.CurrentWeatherMod 
} else if mWeatherSubController.CurrentWeatherMod &gt; 90 {
MetaAlpha = 1 - ((1 / 90) * (mWeatherSubController.CurrentWeatherMod  - 90))
}
} else {
MetaAlpha = 0
}

//Next Period
if mWorldController.NextPeriodWT = 5 or mWorldController.NextPeriodWT = 6 {
if mWeatherSubController.CurrentWeatherMod &lt;= 90 {
MetaAlphaNext = 0
} else if mWeatherSubController.CurrentWeatherMod &gt; 90 {
MetaAlphaNext = 0.5 / 90 * (mWeatherSubController.CurrentWeatherMod - 90)
} 
} else {
MetaAlphaNext = 0
}

if OsAlpha != TargetAlpha {
if TargetAlpha &lt; OsAlpha {
OsAlpha = OsAlpha - Rate
} else if TargetAlpha &gt; OsAlpha {
OsAlpha = OsAlpha + Rate
}
} else if OsAlpha = TargetAlpha {
TargetAlpha = random_range(0.2,0.8)
}

CombinedMetaAlpha = MetaAlpha + MetaAlphaNext

image_alpha = OsAlpha * CombinedMetaAlpha


} else {
instance_destroy()
}
}
} else {
image_alpha = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
