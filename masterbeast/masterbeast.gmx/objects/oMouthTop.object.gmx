<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMouthTopInvisible</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mMouthParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

ClosedMinX = x
ClosedMinY = y
ClosedXScale = image_xscale
ClosedYScale = image_yscale
depth = MouthOuterLayer
OpenMaxX = ClosedMinX          
OpenMaxY = ClosedMinY + 30

//Limits
YUpLimit = ClosedMinY - 30
YDownLimit = ClosedMinY + 30
XLeftLimit = ClosedMinX - 10
XRightLimit = ClosedMinX + 10
OpenXScale = 0.3
OpenYScale = 0.3

Parent = oMouthCentre

image_alpha = 0









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stay Within Limits

x = clamp(x,ClosedMinX,OpenMaxX)
y = clamp(y,OpenMaxY,ClosedMinY + oNose1.YDifference)
image_xscale = clamp(image_xscale,ClosedXScale,OpenXScale)
image_yscale = clamp(image_yscale,ClosedYScale,OpenYScale)



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate X &amp; Y Positions Based On MouthCentre and Nose1

x = ClosedMinX + oMouthCentre.VibrateDiff
y = ClosedMinY + (oNose1.YDifference / 2) + (((OpenMaxY - ClosedMinY) / 100) * Parent.PercentageDiff)
image_xscale = ClosedXScale + (((OpenXScale - ClosedXScale) / 100) * Parent.PercentageDiff)
image_yscale = ClosedYScale  + (((OpenYScale - ClosedYScale) / 100) * Parent.PercentageDiff)








</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touch Liquid

if mouse_check_button_pressed(mb_any) and position_meeting(mouse_x,mouse_y,self) {
TouchLiquid("drool")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Wrinkles

draw_sprite_ext(
sWrinkleMouthTop1,
1,
x - 60 - ((30 / 100) * oMouthCentre.PercentageDiff),
y + 50 - ((30 / 100) * oMouthCentre.PercentageDiff),
0.3 + ((0.1 / 100) * oMouthCentre.PercentageDiff),
0.3 + ((0.1 / 100) * oMouthCentre.PercentageDiff),
0 + ((40 / 100) * oMouthCentre.PercentageDiff),
c_white,
0.9
)

draw_sprite_ext(
sWrinkleMouthTop3,
1,
x + 65 + ((30 / 100) * oMouthCentre.PercentageDiff),
y + 50 - ((30 / 100) * oMouthCentre.PercentageDiff),
0.3 + ((0.1 / 100) * oMouthCentre.PercentageDiff),
0.3 + ((0.1 / 100) * oMouthCentre.PercentageDiff),
0 - ((40 / 100) * oMouthCentre.PercentageDiff),
c_white,
0.9
)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
