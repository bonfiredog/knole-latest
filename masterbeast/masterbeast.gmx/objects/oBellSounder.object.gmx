<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBellSounder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mTabooParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
Broken = false
StartedTolling = false
ex_audio_set_position("bellsound",x,y,1)
Redness = 0
image_xscale = 0.05
image_yscale = image_xscale
depth = OnObjectsLayer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tolling The Bell
if Broken = false {
if StartedTolling = true {
if NumberOfTolls &gt; 0 {
ex_audio_play("bellsound", false)
BellSoundReaction()
CreateParticleSplash(x,y,2,ps_shape_ellipse,ps_distr_gaussian,c_black,10,30,0.001,0.003,-40,40,10,30,50,100)
if instance_exists(oBellSounderTongue) {
oBellSounderTongue.StepsToWindDown = ex_audio_get_track_duration("bellsound") * room_speed
oBellSounderTongue.StepsToWindDownTotal = oBellSounderTongue.StepsToWindDown
oBellSounderTongue.SideTimer = 10
}

NumberOfTolls -= 1
alarm[1] = (ex_audio_get_track_duration("bellsound") * 60) + 20
} else {
NumberOfTolls = 0
alarm[0] = irandom_range(300,1000)
}
}
} else {
NumberOfTolls = 0
alarm[0] = irandom_range(300,1000)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Tolling After First Minute Has Passed
StartedTolling = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Positioning

x = OriginalX
y = OriginalY

if Redness &gt; 0 {
Redness -= 0.001
}
Redness = clamp(Redness,0,1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sounding The Bell On The Hour

if Broken = false {

if current_minute = 0 and StartedTolling = false {
StartedTolling = true 
NumberOfTolls = current_hour
TollStart = false
}

if StartedTolling = true and NumberOfTolls &gt; 0 and TollStart = false {
TollStart = true
BellSoundReaction()
ex_audio_play("bellsound", false)
CreateParticleSplash(x,y,2,ps_shape_ellipse,ps_distr_gaussian,c_black,10,30,0.001,0.003,-40,40,30,50,0,200)

if instance_exists(oBellSounderTongue) {
oBellSounderTongue.StepsToWindDown = ex_audio_get_track_duration("bellsound") * room_speed
oBellSounderTongue.StepsToWindDownTotal = oBellSounderTongue.StepsToWindDown
oBellSounderTongue.SideTimer = 10
}
NumberOfTolls -= 1
alarm[1] = (ex_audio_get_track_duration("bellsound") * 60) + 20
}
}

ex_audio_set_volume("bellsound",BothVolMod(0.7),1)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Getting Wounded

if Broken = false {
if instance_exists(mFinger) {
if place_meeting(x,y,mFinger) and mInterfaceController.CurrentHandUse = "knife" {
if Broken = false {
Broken = true
ex_audio_set_position("cutout",mouse_x,mouse_y,1)
ex_audio_set_volume("cutout",BothVolMod(0.5),0)
ex_audio_play("cutout",0)
CreateStain(10,0,360,15,25,0.3,0.05,0.1,0.1,0.2,DebugRedTextColour,mouse_x,mouse_y)
CreateParticleSplash(mFinger.x,mFinger.y,2,ps_shape_ellipse,ps_distr_gaussian,DebugRedTextColour,10,30,0.05,0.1,0,360,30,50,0.01,10)
sprite_index = sBellSounderBroke
with (oBellSounderTongue) {
instance_destroy()
}
}
}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Redness

draw_self()
if Broken = false {
draw_sprite_ext(sBellSounderRed,0,x,y,image_xscale,image_yscale,image_angle,c_white,Redness)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
