<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSmear1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

x = mouse_x
y = mouse_y
direction = point_direction(mInterfaceController.LastX,mInterfaceController.LastY,mouse_x,mouse_y)
image_angle = direction
sprite_index = choose(sSmear1,sSmear2,sSmear3)
image_alpha = 0.8
image_xscale = 0 + ((mInterfaceController.SmearBaseSize / mInterfaceController.SmearAmountMax) * mInterfaceController.SmearAmount)
image_yscale = image_xscale





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spreading In A Direction

//Draw To Surface Depending On Which Object Is Being Touched.
//draw with alpha turned off...

if instance_exists(mHeadDrawer) {
if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oNose1) {
surface_set_target(oNose1.NoseSurface)
draw_sprite_ext(sprite_index,0,(x - oNose1.NoseSurfaceCurrentX),(y - oNose1.NoseSurfaceCurrentY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oCheekLeft) 
{ surface_set_target(oCheekLeft.CheekLeftSurface)
draw_sprite_ext(sprite_index,0,(x - oCheekLeft.CheekLeftSurfaceCurrentX),(y - oCheekLeft.CheekLeftSurfaceCurrentY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oCheekRight) {
surface_set_target(oCheekRight.CheekRightSurface)
draw_sprite_ext(sprite_index,0,(x - oCheekRight.CheekRightSurfaceCurrentX),(y - oCheekRight.CheekRightSurfaceCurrentY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oCaulJug) {
surface_set_target(oCaulJug.CaulJugSurface)
draw_sprite_ext(sprite_index,0,(x - oCaulJug.CaulJugSurfaceCurrentX),(y - oCaulJug.CaulJugSurfaceCurrentY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oCaulLip) {
surface_set_target(oCaulLip.LipSurface)
draw_sprite_ext(sprite_index,0,(x - oCaulLip.SurfaceX),(y - oCaulLip.SurfaceY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,oCaulBowl) {
surface_set_target(oCaulBowl.BowlSurface)
draw_sprite_ext(sprite_index,0,(x - oCaulBowl.SurfaceX),(y - oCaulBowl.SurfaceY),image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
} else if ObjectFullyOverlapping(bbox_left,bbox_top,bbox_right,bbox_top,bbox_left,bbox_bottom,bbox_right,bbox_bottom,mCreatureParent) { 
surface_set_target(mHeadDrawer.BodyWipeSurface)
draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha)
surface_reset_target()
}
}
instance_destroy()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete Sprite

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
