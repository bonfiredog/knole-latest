<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCheekRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = CheekLayer
OriginalX = x
OriginalY = y
BaseY = y
SquintMod = 0
OriginalXScale = image_xscale
BaseXScale = OriginalXScale
OriginalYScale = image_yscale
OriginalAngle = image_angle
RotateDifference = 0
ScaleLimit = OriginalXScale + 0.09
XLimit = 40
XLimitLeft = OriginalX - XLimit
XLimitRight = OriginalX + XLimit
YLimitUp = OriginalY - 50
YLimitDown = OriginalY + 0
UpPercentageDifference = 0

XDifference = 0
YDifference = 0

BreathingMod = 0

CheekRightSurface = surface_create(sprite_width,sprite_height)
CheekRightSurfaceCurrentX = x - (sprite_width / 2)
CheekRightSurfaceCurrentY = y - (sprite_height / 2)

Touching = false
XOffset = 0
YOffset = 0
LastXPos = 0
LastYPos = 0
ResetXY = true

Redness = 0
RednessTemp = 0
TwitchMod = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move If Grabbed

if position_meeting(mouse_x,mouse_y,self)
and mouse_check_button_pressed(mb_any)
and mInterfaceController.HandWet = false
and instance_exists(mDebug) = false
and mInterfaceController.Cleaning = false and mInterfaceController.Healing = false
and AmountForward(70)
and mInterfaceController.CurrentHandUse = "none"
and Touching = false {
XOffset = mouse_x - x
YOffset = mouse_y - y
if ResetXY = true {
LastXPos = x
LastYPos = y
}
if mInterfaceController.GrabbingBodyPart = false {
mInterfaceController.GrabbingBodyPart = true
VocaliseChance(20 + ((20 / 100) * mCreatureController.Resistance))
}
WriteToLog("Grabbed right cheek.")
Touching = true 
ex_audio_set_pitch("movebp",random_range(0.95,1.05),0)
ex_audio_play("movebp",1)
ResetXY = false
}

if Touching = true {
if mInterfaceController.DragSpeed &lt;= 0 {
if ex_audio_is_paused("movebp") = false {
ex_audio_pause("movebp")
}
} else {
if ex_audio_is_paused("movebp") {
ex_audio_resume("movebp")
}
}
RednessTemp += 0.001
x = mouse_x - XOffset
y = mouse_y - YOffset
if mouse_check_button_released(mb_any) {
ex_audio_stop("movebp")
mInterfaceController.GrabbingBodyPart = false
Touching = false
XOffset = 0
YOffset = 0
StepdownX = abs(LastXPos - x) / 30
StepdownY = abs(LastYPos - y) / 30
}
}

if Touching = false {
RednessTemp -= 0.001
if ResetXY = false {
if x &gt; LastXPos + 6
{
x -= 5
} else if x &lt; LastXPos - 6 {
x += 5
}
if y &gt; LastYPos + 6 {
y -= 5
} else if y &lt; LastYPos - 6 {
y += 5
}

if (x &gt; (LastXPos - 6)) and (x &lt; (LastXPos + 6))
and (y &gt; (LastYPos - 6)) and (y &lt; (LastYPos + 6))
{
ResetXY = true
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep Within Limits &amp; Set Position

Breathing()

image_angle = direction
RotateDifference = image_angle - OriginalAngle

if Touching = false and ResetXY = true {
y = BaseY - oCheekLeft.SquintMod - oCheekLeft.HappyModUp - oCheekLeft.AngryModUp + oCheekLeft.SadModDown + oCheekLeft.SurpriseModDown + oCheekLeft.ShameModDown - oCheekLeft.PainModDown + oCheekLeft.FearModDown - ((30 / 100) * BreathingMod) - TwitchMod  - mBehavioursReactive.CheekSneezeMod
}
image_xscale = BaseXScale + oCheekLeft.HappyModBig + ((0.05 / 100) * BreathingMod)
image_yscale = image_xscale

x = clamp(x,XLimitLeft,XLimitRight)
y = clamp(y,YLimitUp,YLimitDown)
image_xscale = clamp(image_xscale,OriginalXScale,ScaleLimit)
image_yscale = clamp(image_yscale,OriginalYScale,ScaleLimit)

XDifference = x - OriginalX
YDifference = y - OriginalY
XScaleDifference = image_xscale - OriginalXScale
YScaleDifference = image_yscale - OriginalYScale

Redness = 0 
+ ((0.1 / 100) * mEmotionSubController.HappyActivation)
+ ((0.1 / 100) * mEmotionSubController.ShameActivation)
+ ((0.1 / 100) * mCreatureController.Lust)
+ ((0.1 / 100) * mEmotionSubController.AngerActivation)
+ ((0.1 / 100) * mCreatureController.Stress)
+ ((0.5 / 100) * mDriveCollectionMaster.RitualTolerance)

Redness = clamp(Redness,0,0.5)
RednessTemp = clamp(RednessTemp,0,0.5)

if RednessTemp &gt; 0 {
RednessTemp -= 0.001
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate Outwards Slightly With Upward Movement

UpPercentageDifference = (((OriginalY - y) / 50) * 100)

direction = 0 - ((10 / 100) * UpPercentageDifference)

XScaleDifference = image_xscale - OriginalXScale
YScaleDifference = image_yscale - OriginalYScale


CheekRightSurfaceCurrentX = x - (sprite_width / 2)
CheekRightSurfaceCurrentY = y - (sprite_height / 2)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shadow, Sprite, Redness, Stain Surface

draw_sprite_ext(sCheekRight,1,
x + 8 + ((10 / 0.09) * XScaleDifference) 
,y
,image_xscale,image_yscale,direction,c_black,0.5)
draw_self()
draw_sprite_ext(sCheekRightRed,1,x,y,image_xscale,image_yscale,direction,c_white,Redness+RednessTemp)

if !surface_exists(CheekRightSurface) {
CheekRightSurface = surface_create(sprite_width,sprite_height)
}

CleanableSurface(oCheekRight.CheekRightSurface,oCheekRight,0.2)
draw_surface_ext(CheekRightSurface,x - (sprite_width / 2),y - (sprite_height / 2),1,1,direction,c_white,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
