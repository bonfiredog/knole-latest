<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = ViewportFilterLayer - 0.1
On = true
LightSurface = surface_create(room_width * 2,room_height * 2)

x = ControllerObjectX
y = ControllerObjectY
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Environmental Lighting Control

//Unless thunder flashing, or turned off, draw the environment filter layer at the current colour
//and 'strength' (alpha).

if On = true {
if mWeatherSubController.FlashInProgress = false {
ImageBlend = mWorldController.CurrentEnviroLightColour
ImageAlpha = mWorldController.CurrentEnviroLightAlpha
} else if mWeatherSubController.FlashInProgress = true {
ImageBlend = c_white
ImageAlpha = 0.8
}
} else if On = false {
ImageBlend = c_white
ImageAlpha = 0
}

//Clamp the alpha so that it cannot go below 0 or above 1.
ImageAlpha = clamp(ImageAlpha,0,0.95)




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing All Current Lighting

if On = true {
//Create the surface.
if surface_exists(LightSurface) = false {
LightSurface = surface_create(room_width * 2,room_height * 2)
}

surface_set_target(LightSurface)
draw_clear_alpha(ImageBlend,ImageAlpha)


//Drawing Object Lights
//---------------------------
if mWorldController.ObjectLightingOn = true {

draw_set_blend_mode(bm_src_color)

//---------------------------------------------
//Eyes Glowing
if mCreatureController.Alive &gt; 0 {
with (oEyeballRight){
if Light = true {
draw_sprite_ext(sLightFlickerCircle,1,x - mInterfaceController.FloatModX + 400,y - mInterfaceController.FloatModY + 400,GlowSize,GlowSize,0,c_white,1)
}
}

with (oEyeballLeft){
if Light = true {
draw_sprite_ext(sLightFlickerCircle,1,x  - mInterfaceController.FloatModX + 400,y - mInterfaceController.FloatModY+ 400,GlowSize,GlowSize,0,c_white,1)
}
}
}

//--------------------------------------------
//Moon Glowing
with (mMoonVisible) {
draw_sprite_ext(sLightFlickerCircle,1,x + 400,y + 400,TonightMoonPowerFinal * 16,TonightMoonPowerFinal * 16,0,c_white,1)
}

//---------------------------------------------
//Finger Light
if mInterfaceController.FingerLightOn = true and instance_exists(mFinger) {
with (mFinger) {
draw_sprite_ext(sLightFlickerCircle,1,x + 400,y + 400,LightRad,LightRad,0,c_white,1)
}
}
//---------------------------------------------
//Red Mole (except on Monday)
if current_weekday != "Monday" and instance_exists(oMoleHerdRed) {
with oMoleHerdRed {
if mInterfaceController.CurrentView = MicroView and mInterfaceController.ChangingView = false {
draw_sprite_ext(sLightFlickerCircle,1,x + 400,y + 400,LightRad,LightRad,0,c_white,1)
}
} 
}
//---------------------------------------------
//NightTime Glinting
if mDriveCollectionMaster.Glowing = true {
with mDriveCollectionMaster {
draw_sprite_ext(sLightFlickerCircle,1,RandX + 400,RandY + 400,GlowSize,GlowSize,0,c_white,1)
}
}

draw_set_blend_mode(bm_normal)
}
//---------------------------

surface_reset_target()
draw_surface_ext(LightSurface,
-400 +  mInterfaceController.FloatModX,-400 + mInterfaceController.FloatModY,1,1,0,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
