<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMouthRightInvisible</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mMouthParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

ClosedMinX = x
ClosedMinY = y
ClosedXScale = image_xscale
ClosedYScale = image_yscale
depth = MouthOuterLayer
OpenMaxX = ClosedMinX + 160
OpenMaxY = ClosedMinY + 117

//Limits
YUpLimit = ClosedMinY - 200
YDownLimit = ClosedMinY + 200
XLeftLimit = ClosedMinX - 200
XRightLimit = ClosedMinX + 200
OpenXScale = 0.2
OpenYScale = 0.03

Parent = oMouthCentre

//Path Details


Point0BaseX = 0
Point1BaseX = 65
Point2BaseX = 130
Point3BaseX = 210
TotalXChange = 20
PathBaseY = 174
Point3YChange = 124
Point2YChange = 74
Point1YChange = 30

image_alpha = 0

BaseBendPercentage = 0 
BendPercentage = BaseBendPercentage

Touching = false
LastPercentage = 0 
ResetXY = true
TwitchBend = 0
AgonyMod = 0
VibrateDiff = 0
DeadMod = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move If Grabbed

if place_meeting(x,y,mFinger)
and AmountForward(70)
and mInterfaceController.CurrentHandUse = "none"
and instance_exists(mDebug) = false
and Touching = false {
if ResetXY = true {
LastBend = BaseBendPercentage
}
if mInterfaceController.GrabbingBodyPart = false {
mInterfaceController.GrabbingBodyPart = true
}
Touching = true 
WriteToLog("Grabbed right mouth.")
ex_audio_set_pitch("movebp",random_range(0.95,1.05),0)
ex_audio_play("movebp",1)
ResetXY = false
}


if Touching = true {
if mInterfaceController.DragBegun = true and mInterfaceController.DragSpeed &gt; 0 {
if mInterfaceController.DragDirection &gt;= 0 and mInterfaceController.DragDirection &lt;= 180 
{
BaseBendPercentage += 5
} 
else if mInterfaceController.DragDirection &gt; 180 and mInterfaceController.DragDirection &lt;= 360 
{
BaseBendPercentage -= 5
}
}
if mInterfaceController.DragSpeed &lt;= 0 {
if ex_audio_is_paused("movebp") = false {
ex_audio_pause("movebp")
}
} else {
if ex_audio_is_paused("movebp") {
ex_audio_resume("movebp")
}
}
if mouse_check_button_released(mb_any) {
ex_audio_stop("movebp")
mInterfaceController.GrabbingBodyPart = false 
Touching = false
}
}


if Touching = false {
if ResetXY = false {
if BaseBendPercentage &gt; LastBend + 6
{
BaseBendPercentage -= 5
}
if BaseBendPercentage &lt; LastBend - 6
{
BaseBendPercentage += 5
}
if BaseBendPercentage &gt; LastBend - 6 and BaseBendPercentage &lt; LastBend + 6 {
ResetXY = true
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stay Within Limits

x = clamp(x,XLeftLimit,XRightLimit)
y = clamp(y,YDownLimit,YUpLimit)
image_xscale = clamp(image_xscale,ClosedXScale,OpenXScale)
image_yscale = clamp(image_yscale,ClosedYScale,OpenYScale)
BaseBendPercentage = clamp(BaseBendPercentage,-100,100)
BendPercentage = clamp(BendPercentage,-100,100)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///X &amp; Y In Line With Parent &amp; Nose1

x = ClosedMinX + ((OpenMaxX - ClosedMinX) / 100) * Parent.PercentageDiff + oMouthCentre.VibrateDiff
y = ClosedMinY + (oNose1.YDifference / 2) + (((OpenMaxY - ClosedMinY) / 100) * Parent.PercentageDiff)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path Bending

HappyModUp = ((70 / 100) * mEmotionSubController.HappyActivation)
SadModDown = ((70 / 100) * mEmotionSubController.SadActivation)
AngryModDown = ((70 / 100) * mEmotionSubController.AngerActivation)
ShameModDown = ((55 / 100) * mEmotionSubController.ShameActivation)
PainModDown = ((60 / 100) * mCreatureController.Pain)
FearModDown = ((60 / 100) * mEmotionSubController.FearActivation)

BendPercentage = BaseBendPercentage + HappyModUp - SadModDown - AngryModDown - ShameModDown - PainModDown - FearModDown + ((40 / 100) * oCheekRight.UpPercentageDifference) + TwitchBend - AgonyMod - DeadMod

if mDriveCollectionMaster.CreatureSuperDied {
DeadMod += 0.02
DeadMod = clamp(DeadMod,0,20)
}

path_change_point(pMouthRight,3,path_get_point_x(pMouthRight,3),
PathBaseY - ((Point3YChange / 100) * BendPercentage),1)
path_change_point(pMouthRight,2,path_get_point_x(pMouthRight,2),
PathBaseY - ((Point2YChange / 100) * BendPercentage),1)
path_change_point(pMouthRight,1,path_get_point_x(pMouthRight,1),
PathBaseY - ((Point1YChange / 100) * BendPercentage),1)



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touch Liquid

if mouse_check_button_pressed(mb_any) and position_meeting(mouse_x,mouse_y,self) {
TouchLiquid("drool")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
