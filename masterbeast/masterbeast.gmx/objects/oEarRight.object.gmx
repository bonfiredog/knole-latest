<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEarRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = EarLayer
OriginalX = x
OriginalY = y
YDifference = 0
XDifference = 0
Plucked = false
BaseRedness = 0
EarRedness = BaseRedness
Pulling = false
PullingXOffset = 0
PullingYOffset = 0
PullLimit = 20
PullLimitReached = false
PullTimer = 0
ShakeModX = 0
ShakeDirection = "out"
ShakeModY = 0
ShakeTimer = 0
Ripped = false
ClearOfHead = false

EarLumpRightY = 0

RightEarRipped = false

RightEarOriginalX = 0
PlayingWhistle = false
TouchingTwitch = false
AgonyMod = 0

SetSound = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop Sound

ex_audio_stop("earwhistleright")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Whistling Wind Sound If Zoomed In


if SetSound = false {
ex_audio_play("earwhistleright",1)
ex_audio_set_falloff("earwhistleright",100,250,1)
SetSound = true
}


ex_audio_set_volume("earwhistleright",InVolMod(0.5))
ex_audio_set_position("earwhistleright",x,y,1)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pulling Ear Out

//Pulling Begin
if position_meeting(mouse_x,mouse_y,mCreatureParent) = false
and (position_meeting(mouse_x,mouse_y,self.id)) and instance_exists(mDebug) = false
and mouse_check_button_pressed(mb_any)
and AmountForward(70)
and Pulling = false 
and Ripped = false
{
ex_audio_set_position("earclick",self.x,self.y,1)
ex_audio_set_volume("earclick",1.3,0)
ex_audio_play("earclick",0)
ex_audio_set_position("hornpull",self.x,self.y,1)
ex_audio_set_volume("hornpull",0,0)
ex_audio_play("hornpull",1)
PullingXOffset =  mouse_x + x
CurrentX = x
CurrentY = y
PullLimitReached = false
ShakeModY = 0
ShakeModMod = 0
EarPullInitial()
StartScreenShake(420,1,2)
}

//Slowly repair the ear over time.

if Pulling = false and Ripped = false {
PullTimer -= 0.05
}



//When Pulling...
if Pulling = true {

CurrentVol = ex_audio_get_volume("hornpull")
ex_audio_set_volume("hornpull", CurrentVol + 0.01,0) 
EarPullOngoing()

//Stop Pulling if move off ear or let go of button.
if mouse_check_button_released(mb_any) {
mInterfaceController.SSTime = 0 
Pulling = false
ShakeModY = 0
PullLimitReached = false
ShakeModMod = 0
ex_audio_set_volume("hornpull",0,30)
ex_audio_set_position("earclick",self.x,self.y,1)
ex_audio_set_volume("earclick",1.3,0)
ex_audio_play("earclick",0)
}

y = CurrentY + ShakeModY
x = mouse_x + PullingXOffset

x = clamp(x,OriginalX, (OriginalX + PullLimit))
y = clamp(y,(CurrentY - 10),CurrentY + 10)

if PullTimer &lt; 100 {
//Countdown
PullTimer += 0.2


//Make ear redder
BaseRedness += 0.002

//Shaking
with mInterfaceController {
SSIntensity = 1 + ((7 / 100) * oEarRight.PullTimer)
}

//Actual Rip
} else if PullTimer &gt;= 100 {
Pulling = false
RipOutEarReactions()
mInterfaceController.SSTime = 0 
ex_audio_set_volume("hornpull",0,15)
ex_audio_set_position("earbreak",self.x,self.y,1)
ex_audio_set_volume("earbreak",BothVolMod(1),0)
ex_audio_play("earbreak",0)
WriteToLog("Pulled out right ear.")
EarLumpRightY = CurrentY
RightEarRipped = true
RightEarOriginalX = OriginalX
Ripped = true
mCreatureController.LERipped = true
ClearOfHead = false
ChooseDir = choose(-1,1)
ShakeModX = 0
ShakeModY = 0
ShakeModMod = 0
mCreatureController.Hearing -= 50
with mEarAnchorRight {
CreateParticleSplash(x,y,5,ps_shape_ellipse,ps_distr_gaussian,DebugRedTextColour,15,30,0.1,0.3,120,240,30,100,3,50)
CreateStain(20,-80,80,10,20,1,0.3,0.4,0.1,0.2,BloodLiquidColour,x,y)
}
Held = false
speed = 40
direction = 270
image_angle += (2 * ChooseDir)
ThisTaboo = instance_create(1147,1510,oEarTaboo)
}
} else {
if ex_audio_is_playing("earpull") {
ex_audio_stop("earpull")
}
}

if Pulling = false and Ripped = false {
if x &gt; OriginalX {
x -= 4
}

if y &gt; OriginalY {
y -= 1
}

if y &lt; OriginalY {
y += 1
}

if BaseRedness &gt; 0 {
BaseRedness -= 0.01
}
} 


if Ripped = true and Pulling = false {

//Redness go down
if BaseRedness &gt; 0 {
BaseRedness -= 0.01
}

//Rotate onto a tilt {
if image_angle &gt; -20 {
image_angle -= 3
}

depth = OffObjectsLayer

DestroyIfLeaveBottomOfRoom()

if Held = true {
x = mouse_x - PullingXOffset
y = mouse_y - PullingYOffset
if mouse_check_button_released(mb_any) {
Held = false
}
}

if Held = false {
speed = 40
direction = 270
image_angle += (2 * ChooseDir)
}
} 

PullTimer = clamp(PullTimer,0,100)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving With Body &amp; Modifiers

if Pulling = false and Ripped = false {
y = OriginalY - ((50 / 100) * oCheekRight.UpPercentageDifference) - ((50 / 100) * oMouthCentre.PercentageDiff)
}

YDifference = y - OriginalY
XDifference = x - OriginalX

HappyModMore = ((0.1 / 100) * mEmotionSubController.HappyActivation)
AngryModMore =  ((0.1 / 100) * mEmotionSubController.AngerActivation)
LustModMore =  ((0.1 / 100) * mCreatureController.Lust)
StressModMore =  ((0.1 / 100) * mCreatureController.Stress)
SurpriseModLess =  ((0.1 / 100) * mEmotionSubController.SurpriseActivation)
ShameModMore =  ((0.1 / 100) * mEmotionSubController.ShameActivation)
PainModLess =  ((0.1 / 100) * mCreatureController.Pain)
FearModLess =  ((0.1 / 100) * mEmotionSubController.FearActivation)

EarRedness = BaseRedness + HappyModMore + AngryModMore + LustModMore + StressModMore - SurpriseModLess + ShameModMore - PainModLess - FearModLess + AgonyMod  + ((0.5 / 100) * mDriveCollectionMaster.RitualTolerance)

BaseRedness = clamp(BaseRedness,0,0.5)
EarRedness = clamp(EarRedness,0,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self And Redness

draw_self()
draw_sprite_ext(sEarRight,0,x,y,image_xscale,image_yscale,image_angle,c_red,EarRedness)

if RightEarRipped = false {
draw_sprite_ext(sEarLumpLeft,0,oEarRight.OriginalX - 50,oEarRight.y,0.3,0.3,180,c_white,1)
} else {
draw_sprite_ext(sEarLumpLeft,0,RightEarOriginalX - 50,EarLumpRightY,0.3,0.3,180,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
