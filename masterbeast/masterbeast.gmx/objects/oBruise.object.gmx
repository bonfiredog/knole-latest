<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBruise1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mTabooParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

RootedX = 0
RootedY = 0
Rotation = 0
Intensity = 0
sprite_index = choose(sBruise1,sBruise2,sBruise3,sBruise4,sBruise5,sBruise6,sBruise7,sBruise8)
CurrentXScale = 0
CurrentYScale = 0
if Chance(15) {
BlackOrRed = c_red
} else {
BlackOrRed = c_white
}
image_alpha = 0
Dir = "in"
ChangeRate = 0.00005
depth = HeadSkinLayer - 0.00001
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Getting Larger And Fading In, Holding, Then Fading Out

if Dir = "in" {
if CurrentXScale &lt; TopXScale {
CurrentXScale += ChangeRate
CurrentYScale = CurrentXScale
}
if image_alpha &lt; Intensity {
image_alpha += ChangeRate
}

if image_alpha &gt;= Intensity and CurrentXScale &gt;= TopXScale {
Dir = "hold"
}
} else if Dir = "hold" {
if HoldTime &gt; 0 {
HoldTime -= 1
} else if HoldTime &lt;= 0 {
Dir = "out"
}
} else if Dir = "out" {
if CurrentXScale &gt; 0 {
CurrentXScale -= (ChangeRate * ((5 / 100) * (100 - mCreatureController.Alive) + 1))
CurrentYScale = CurrentXScale
}
if image_alpha &gt; 0 {
image_alpha -= (ChangeRate * ((5 / 100) * (100 - mCreatureController.Alive)+ 1))
}

if image_alpha &lt;= 0 and CurrentXScale &lt;= 0 {
instance_destroy()
}
}

image_xscale = CurrentXScale 
image_yscale = CurrentYScale 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Red Or Black

draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,BlackOrRed,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
