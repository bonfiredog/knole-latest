<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sHornSocketLeftBack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mCollisionParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
Parent = oHornSocketLeftFront
depth = AnatomyLayer2 + 0.05
Growing = false
GrowingSurface = surface_create(sprite_width, 500)
SetSound = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep In Line With Front

x = OriginalX + Parent.XDifference
y = OriginalY + Parent.YDifference
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sounds: Growing &amp; Whistling

if SetSound = false {
ex_audio_play("hornwhistleleft",1)
ex_audio_set_falloff("hornwhistleleft",300,450,1)
SetSound = true
}

if Growing = true {
ex_audio_set_volume("hornregrowleft",InVolMod(0.03))
ex_audio_set_position("hornregrowleft",x,y,1)
if ex_audio_is_playing("hornregrowleft") = false {
ex_audio_play("hornregrowleft",1)
}
} else {
if ex_audio_is_playing("hornregrowleft") {
ex_audio_stop("hornregrowleft")
}
}

ex_audio_set_volume("hornwhistleleft",InVolMod(0.01))
ex_audio_set_position("hornwhistleleft",x,y,1)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touching With Blood

if mouse_check_button_pressed(mb_any) and position_meeting(mouse_x,mouse_y,self) and Growing = true {
TouchLiquid("blood")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing Sprites &amp; Growing Horn

draw_self()
if Growing = true {
SurfaceX = x - (sprite_width / 2)
SurfaceY = y - 500
if !surface_exists(GrowingSurface) {
GrowingSurface = surface_create(sprite_width,500)
}
surface_set_target(GrowingSurface)
draw_clear_alpha(c_black,0)
with oHornLeft {
if Growing = true {
draw_sprite_ext(sHornTopLeft,0,x - oHornSocketLeftBack.SurfaceX,y - oHornSocketLeftBack.SurfaceY,image_xscale,image_yscale,0,c_white,1)
}
}
surface_reset_target()

draw_surface_ext(GrowingSurface,SurfaceX,SurfaceY,1,1,0,c_white,1)
draw_sprite_ext(sHornSocketLeftBackFribble,0,x,y,image_xscale,image_yscale,0,c_white,1)
} else if Growing = false {
if !surface_exists(GrowingSurface) {
} else {
surface_free(GrowingSurface)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
