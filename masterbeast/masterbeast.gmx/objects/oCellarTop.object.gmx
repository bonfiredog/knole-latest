<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCellarTop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mCellarParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = HeadSkinLayer - 0.002
Cut = false
image_xscale = oCellarBase.image_xscale + 0.034
image_yscale = oCellarBase.image_yscale + 0.05
CuttingAmount = 0
Redness = 0

SurfaceXOffset = x - (sprite_width  / 2) + 10
SurfaceYOffset = y - 25

CellarTopSurface = surface_create(sprite_width,sprite_height)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutting Off

if Cut = false {
x = oCellarBase.x
y = oCellarBase.y
} else if Cut = true {
//Turn as it falls.
image_angle -= 5
}

if 
mInterfaceController.CurrentHandUse = "knife"
and position_meeting(mouse_x,mouse_y,self.id)
and Cut = false
and (
mouse_x &gt; (x - (sprite_width / 2) + 20)
and mouse_x &lt; (x + (sprite_width / 2) - 20)
and mouse_y &gt; (y - (sprite_height / 2) + 20)
and mouse_y &lt;= y + 20
)
and mInterfaceController.DragBegun = true
and mInterfaceController.DragSpeed &gt; 0
and mInterfaceController.CurrentView = MicroView
{
if CuttingMe = false {
CutCellarInitial()
CuttingMe = true 
} else {
ex_audio_set_position("cellarcut",mouse_x,mouse_y,1)
ex_audio_set_volume("cellarcut",0.1,0)
ex_audio_set_pitch("cellarcut",0.8 + ((0.3 / 100) * CuttingAmount))
if ex_audio_is_playing("cellarcut") = false {
ex_audio_play("cellarcut",1)
}
CuttingAmount += 1
CutCellarReaction()
mInterfaceController.NoNewCut = true
CreateParticleSplash(mouse_x,mouse_y,3,ps_shape_ellipse,ps_distr_gaussian,DebugRedTextColour,5,15,0.05,0.1,0,360,60,120,0.5,40)
CreateStain(7,0,360,20,35,0.1,0.1,0.2,0.05,0.06,BloodLiquidColour,x,y)
Redness = CuttingAmount / 100
if mouse_check_button_released(mb_any) {
mInterfaceController.CurrentHandUse = "none"
}
}
} else { 
CuttingMe = false
if ex_audio_is_playing("cellarcut") {
ex_audio_stop("cellarcut",1)
}
}

if CuttingAmount &gt;= 100 and Cut = false {
ex_audio_set_position("cutout",mouse_x,mouse_y,1)
ex_audio_set_volume("cutout",0.07,0)
ex_audio_play("cutout",0)
CreateParticleSplash(oCellarBase.x,oCellarBase.y,20,ps_shape_ellipse,ps_distr_gaussian,DebugRedTextColour,10,25,0.06,0.11,0,360,70,125,0.5,80)
CreateStain(40,0,360,30,45,0.15,0.1,0.2,0.05,0.06,BloodLiquidColour,oCellarBase.x,oCellarBase.y)
WriteToLog("Cut off Cellar top.")
direction = 270
speed = 30
oCellarBase.Uncovered = true
oCellarBase.DripTimer = 200
Cut = true
}

CuttingAmount = clamp(CuttingAmount,0,100)

DestroyIfLeaveBottomOfRoom()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade In With Zoom

ChangeSpriteWithZoom(0,0,image_xscale,image_yscale)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self &amp; Redness If Zoomed In

SurfaceXOffset = x - (sprite_width  / 2) + 10
SurfaceYOffset = y - 25

ChangeDrawingWithZoom("none",sprite_index,0)

if mInterfaceController.CurrentView = MicroView and mInterfaceController.ChangingView = false {
draw_sprite_ext(sCellarRed,0,x,y,image_xscale,image_yscale,image_angle,DebugRedTextColour,Redness)

if (!surface_exists(CellarTopSurface)) {
CellarTopSurface = surface_create(sprite_width ,sprite_height)
}
draw_surface(CellarTopSurface,x - (sprite_width / 2) + 10,y - 25)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
