<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
OriginalRotation = image_angle

FlutterMod = 0
TouchRotateMod = 0

RotateLimitLower = random_range(-20,-40)
RotateLimitUpper = random_range(20,40)
Plucking = false
RotateChange = random_range(1,2)
Touched = false
Plucking = false
PluckYMod = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Touching

if place_meeting(x,y,mFinger)
and Plucking = false
{
Touched = true
} else {
Touched = false
}


if Touched = true and Plucking = false  {
//Rotate To One Side Slowly
if x &lt; (mouse_x) {
TouchRotateMod -= 2
} else if x &gt; (mouse_x) {
TouchRotateMod += 2
}

} else if Touched = false {

//Slowly Return To Normal Rotation

ChangeOrNot = choose(-1,-1,-1,-1,-1,1)

if ChangeOrNot = 1 {
RotateChange = random_range(1,2)
}

if TouchRotateMod &gt; 0 {
TouchRotateMod -= RotateChange 
}

if TouchRotateMod &lt; 0 {
TouchRotateMod += RotateChange
}
}


TouchRotateMod = clamp(TouchRotateMod,RotateLimitLower,RotateLimitUpper)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movements

y = OriginalY + oCaulJug.YDifference
image_angle = OriginalRotation + TouchRotateMod
image_yscale = OriginalYScale + PluckYMod
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Plucking

///Being Plucked

if position_meeting(mouse_x,mouse_y,self)
and mInterfaceController.CurrentHandUse = "none"
and device_mouse_check_button_pressed(0,mb_any) 
and Plucking = false
and oCaulJug.GlobalPlucking = false
{
Plucking = true
oCaulJug.GlobalPlucking = true
}

if Plucking = true and device_mouse_check_button(0,mb_any)
and instance_exists(oCaulPlucked) = false {
direction = point_direction(device_mouse_x(0),device_mouse_y(0),x,y)
image_angle = direction
PluckYMod = point_distance(x,y,device_mouse_x(0),device_mouse_y(0)) / 4000
PluckYMod = clamp(PluckYMod,0,0.4)
}

if Plucking = true and device_mouse_check_button(0,mb_any) and point_distance(x,y,device_mouse_x(0),device_mouse_y(0)) &gt; 150
and instance_exists(oCaulPlucked) = false
{
CreateParticleSplash(x,y,sprite_width,ps_shape_ellipse,
ps_distr_gaussian,
DebugRedTextColour,
10,
25,
0.05,
0.1,
0,
360,
30,
80,
0.5,
30
)
CreateStain(20,0,360,0.2,0.4,0.1,0.2,0.4,0.05,0.1,BloodLiquidColour,x,y)
WriteToLog("Plucked a canker.")
ThisPluck = instance_create(device_mouse_x(0),device_mouse_y(0),oCaulPlucked)
ThisPluck.image_angle = direction
ThisPluck.sprite_index = sprite_index
ThisPluck.image_xscale = image_xscale
ThisPluck.image_yscale = image_xscale
ThisPluck.PluckedSprite = PluckedSprite
ThisPluck.Held = true
mInterfaceController.CurrentHandUse = "holding"
oCaulJug.GlobalPlucking = false
instance_destroy()
}


if Plucking = true and device_mouse_check_button_released(0,mb_any) {
Plucking = false
oCaulJug.GlobalPlucking = false
}

if Plucking = false {
if PluckYMod &gt; 0 {
PluckYMod -= 0.1
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
