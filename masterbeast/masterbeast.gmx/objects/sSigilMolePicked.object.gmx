<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSigilMoleSmall1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mDropperParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

OriginalX = x
OriginalY = y
ZoomedOutSprite = "null"
ZoomedOutDirection = 0
direction = 0
ZoomedOutXScale = image_xscale
ZoomedOutYScale = image_yscale
ZoomedInScale = 0
ZoomedInDirection = 0
ChangeMultiplier = 0
XDir = 0
depth = OffObjectsLayer
OffSizeMod = 0.02

DripTimer = irandom_range(30,120)
ChooseDir = choose(-1,1)
Pitched = false
PitchedAmount = irandom_range(10,30)
FinalAmount = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Following Mouse And Dropping

//Setting sprite and size based on view.

if mInterfaceController.CurrentView = MacroView {
sprite_index = ZoomedOutSprite
image_xscale = ZoomedOutXScale + 0.1 + OffSizeMod
image_yscale = ZoomedOutYScale + 0.1 + OffSizeMod
image_angle = ZoomedOutDirection
} else if mInterfaceController.CurrentView = MicroView {
sprite_index = ZoomedInSprite
image_xscale = ZoomedInScale + OffSizeMod
image_yscale = ZoomedInScale + OffSizeMod
}

if mouse_check_button(mb_any) and Holding = true {
x = mouse_x - PullingXOffset
y = mouse_y - PullingYOffset
}

//Dropping

if mouse_check_button_released(mb_any) and Holding = true {
Holding = false
}

if Holding = false {
image_angle += (1 * ChooseDir)
direction = 270
speed = 20
}


ChangeSpriteWithZoom(ZoomedOutXScale,ZoomedOutYScale,ZoomedInScale,ZoomedInScale)


DestroyIfLeaveBottomOfRoom()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dripping Blood

if DripTimer &gt; 0 {
DripTimer -= 1
} else if DripTimer &lt;= 0 {
PosX = random_range(x - (sprite_width / 2),x + (sprite_width / 2))
PosY = random_range(y + (sprite_height / 2),y + sprite_height / 2 + 15)
MakeDripSound(x,y)
ThisDrip = instance_create(PosX,PosY,mDripBlood)
ThisDrip.Parent = self.id
ThisDrip.image_xscale = random_range(0.01,0.08)
ThisDrip.image_yscale = ThisDrip.image_xscale
DripTimer = irandom_range(30,120)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing Sprites Depending On View

draw_sprite_ext(sprite_index,0,x + 2,y+2,image_xscale,image_yscale,image_angle,c_black,0.6)
ChangeDrawingWithZoom(ZoomedOutSprite,ZoomedInSprite,ZoomedOutRotation)
if mInterfaceController.CurrentView = MicroView {
draw_sprite_ext(Bottom,0,x,y + (sprite_height / 2),ZoomedInScale + OffSizeMod,ZoomedInScale + OffSizeMod,image_angle,c_white,1)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
