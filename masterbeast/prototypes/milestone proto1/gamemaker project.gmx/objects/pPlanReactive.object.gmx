<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>pPlans</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PlanRunning = true
Alive = 1
SetBlinkNumber = false
EyesOpenAfterShutWait = 90

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if PlanRunning = true {
if Alive &gt; 0.01 {

/*REACTIVE PLANS*/
//These are low-level plans for basic, anatomy-led actions for the creature.
//They become more 'high-level' as the step continues.




/*GENERALLY UNCONSCIOUS ------------------------------------------------*/


//BREATHING
if instance_exists(mAir) {
bBreathing.BehaviourActive = true
} else {
//Perhaps it would start to gasp for breath here, after a certain amount of time?
}

//BLINKING
if mIrritationDetector.Irritated = true and mIrritationDetector.IrritationType != "finger" 
and bSleeping.BehaviourActive = false and bShutEyes.EyesShut = false {
bBlinking.BehaviourActive = true
}

//GOING TO SLEEP IF VERY TIRED
if bSleeping.BehaviourActive = false and bShutEyes.EyesShut = false and mTiredness.TirednessValue &gt;= 90 {
bShutEyes.BehaviourActive = true
bShutEyes.GoingToSleep = true
}

//GOING TO SLEEP IF NO INPUTS IN A WHILE
if mInteractionSensor.NoInteractionsSince &gt; 40 and bShutEyes.EyesShut = false {
bShutEyes.BehaviourActive = true
bShutEyes.GoingToSleep = true
}

//OPENING EYES AGAIN AFTER SHUTTING THEM
if bShutEyes.EyesShut = true and mIrritationDetector.Irritated = false 
and bSleeping.BehaviourActive = false {
if EyesOpenAfterShutWait &gt; 0 {
EyesOpenAfterShutWait = EyesOpenAfterShutWait - 1
} else if EyesOpenAfterShutWait &lt;= 0 {
bOpenEyes.BehaviourActive = true
}
}

//SHUTTING EYES IF POKED IN THEM
if mIrritationDetector.Irritated = true  and mIrritationDetector.IrritationType = "finger" 
and bSleeping.BehaviourActive = false {
bBlinking.BehaviourActive = false
bShutEyes.BehaviourActive = true
bShutEyes.Squint = true
}

//WAKING UP WITH BODGING
if mInteractionSensor.ClicksInARow &gt; 2 {
if bSleeping.BehaviourActive = true and bShutEyes.EyesShut = true{
bOpenEyes.BehaviourActive = true
bOpenEyes.WakingUp = true
}
}


/*GENERALLY CONSCIOUS --------------------------------------------- */

//REACTING TO SOME INPUT
if oListener.HeardSomething = true {
bListening.BehaviourActive = true
if bSleeping.BehaviourActive = true {
bOpenEyes.BehaviourActive = true
bSleeping.BehaviourActive = false
}
oListener.HeardSomething = false
}





}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
