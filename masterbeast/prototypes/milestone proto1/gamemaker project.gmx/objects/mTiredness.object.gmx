<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set Up Initial Values

TimeSinceLastAsleep = 0
TimeSinceLastAsleepLapValue = 0
CurrentSleepStatus = ""
CurrentSleepTime = 0
CurrentSleepTimeLapValue = 0
TirednessBase = 10

TimeOfDayModifier = 0

Tested = false

GoundCountdownTotal = 500 
GoundCountdown = GoundCountdownTotal

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Count how long since last asleep. Remember, it has been reset in bSleeping module.

if bSleeping.BehaviourActive = false {
TimeSinceLastAsleep = TimeSinceLastAsleep + 1
TimeSinceLastAsleepLapValue = TimeSinceLastAsleepLapValue + 1

if TimeSinceLastAsleepLapValue = 64800 {
TirednessBase = TirednessBase + 1
TimeSinceLastAsleepLapValue = 0
}
}
    
//How long is current sleep? Will be reset when waking up?

if bSleeping.BehaviourActive = true {
CurrentSleepTime = CurrentSleepTime + 1
CurrentSleepTimeLapValue = CurrentSleepTimeLapValue + 1

if CurrentSleepTimeLapValue = 21600 {
TirednessBase = TirednessBase - 1
}
}

ReturnTirednessValue()
ReturnNumberOfGoundsToGenerate()






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
