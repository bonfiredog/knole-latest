<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGound1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = global.ObjectInWorldLayer
sprite_index = choose(sGound1,sGound2,sGound3,sGound4,sGound5)
ParentDuct = noone

//When spawned, set parent to either left or right eyes
//and create an initial position on its parent to sit.

ParentDuct = choose(oLeftEyeDuct,oRightEyeDuct)
RandomX = irandom_range(ParentDuct.LeftEdge, ParentDuct.RightEdge)
RandomY = irandom_range(ParentDuct.TopEdge, ParentDuct.BottomEdge)
x = RandomX
y = RandomY


//Give it a random depth within the GoundLayer range.

depth = random_range(global.GoundLayer, (global.GoundLayer + 0.1))

Picked = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Keep it in position. 

x = RandomX
y = RandomY - ParentDuct.Difference
image_yscale = ParentDuct.image_yscale
image_xscale = image_yscale

//If the eye blinks or shuts or even narrows, make it invisible.

if bShutEyes.EyesShut = true or bShutEyes.Squint = true and (place_meeting(x,y,oLeftEye) 
or place_meeting(x,y,oRightEye))  {
image_alpha = 0
} else if place_meeting(x,y,oLeftEye) or place_meeting(x,y,oRightEye) {
image_alpha = 1
if ParentDuct = oLeftEyeDuct {
image_yscale = oLeftEye.image_yscale
} else if ParentDuct = oRightEyeDuct {
image_yscale = oRightEye.image_yscale
}
} 

if Picked = true {

var fixture = physics_fixture_create();
physics_fixture_set_box_shape(fixture, sprite_width / 2, sprite_height / 2);
physics_fixture_set_density(fixture, 0.5);
physics_fixture_set_restitution(fixture, 0.2);
physics_fixture_set_friction(fixture, 0.5);
physics_fixture_bind(fixture, id);
physics_fixture_delete(fixture);



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
