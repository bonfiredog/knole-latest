<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sHoleBottom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth  = 5
BuriedSurface = surface_create(sprite_width + 200,400)
Shade = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

SurfaceOriginX = x - (sprite_width / 2) - 100
SurfaceOriginY = y - 400

if !surface_exists(BuriedSurface) {BuriedSurface = surface_create(sprite_width,400)}

surface_set_target(BuriedSurface)
draw_clear_alpha(c_white,0)
surface_reset_target()

if oSarahHead.Rooted = true {
surface_set_target(BuriedSurface)
with oBody {
draw_sprite_ext(sBody,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sBody,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_black,oHoleBottom.Shade)
}
with oNecks {
draw_sprite_ext(sNecks,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sNecks,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_black,oHoleBottom.Shade)
}
with oJohnHead {
draw_sprite_ext(sJohnHead,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sJohnHead,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_black,oHoleBottom.Shade)
}
with oSarahHead {
draw_sprite_ext(sSarahHead,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sSarahHead,0,x - oHoleBottom.SurfaceOriginX,y - oHoleBottom.SurfaceOriginY,image_xscale,image_yscale,image_angle,c_black,oHoleBottom.Shade)
}
surface_reset_target()
} else if oSarahHead.Rooted = false {
with oBody {
draw_self()
}
with oNecks {
draw_self()
}
with oJohnHead {
draw_self()
}
with oSarahHead {
draw_self()
}
}


draw_surface_ext(BuriedSurface,SurfaceOriginX,SurfaceOriginY,1,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
