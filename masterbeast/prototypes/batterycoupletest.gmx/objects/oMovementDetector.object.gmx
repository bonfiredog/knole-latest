<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sJohnHead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>VMove = "none"
HMove = "none"
MoveSpeed = 0
LastX = mouse_x
LastY = mouse_y
image_alpha = 0
DisplayHMove = HMove
DisplayVMove = VMove
DisplaySpeed = MoveSpeed
alarm[0] = 10
SpeedMax = 100
Knife = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DisplayHMove = HMove
DisplayVMove = VMove
DisplaySpeed = MoveSpeed

alarm[0] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>LastX = mouse_x
LastY = mouse_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detecting Movement Direction And Speed

CurrentDir = point_direction(LastX,LastY,mouse_x,mouse_y)
CurrentSpeed = point_distance(LastX,LastY,mouse_x,mouse_y)

CurrentSpeed = clamp(CurrentSpeed,0,SpeedMax)

if CurrentSpeed &gt; 0 {
if CurrentDir &gt;= 20 and CurrentDir &lt;= 160 {
VMove = "up"
} else if CurrentDir &gt; 200 and CurrentDir &lt;= 340 {
VMove = "down"
}
if CurrentDir &lt;= 70 and CurrentDir &gt;= -270 {
HMove = "right"
} else if CurrentDir &gt; 110 and CurrentDir &lt; 250 {
HMove = "left"
}
MoveSpeed = CurrentSpeed
} else {
MoveSpeed = CurrentSpeed
VMove = "none"
HMove = "none"
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting Knife

if Knife = false {
if keyboard_check(ord('K')) and mouse_check_button_pressed(mb_any) {
Knife = true
}
} else if Knife = true {
if mouse_check_button_released(mb_any) {
Knife = false
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fFont)
draw_set_halign(fa_left)
draw_set_valign(fa_center)
draw_set_alpha(1)
draw_set_colour(c_black)
PosX = 30
PosY = 30
draw_text(PosX,PosY,"PROTOTYPE")
PosY += 20
draw_text(PosX,PosY,"Current Speed: " + string(DisplaySpeed))
PosY += 20
draw_text(PosX,PosY,"VMove: " + DisplayVMove)
PosY += 20
draw_text(PosX,PosY,"HMove: " + DisplayHMove)
if instance_exists(oHoleUpper) {
PosY += 20
draw_text(PosX,PosY,"Cut Amount: " + string(oHoleUpper.CuttingAmount))
}
PosY += 20
if Knife = true {
draw_text(PosX,PosY,"Knife")
} else if Knife = false {
draw_text(PosX,PosY,"No Knife")
}
if instance_exists(oReplaceDetect)
PosY += 20
draw_text(PosX,PosY,"DistX: " + string(oReplaceDetect.DistanceFromX))
PosY += 20
draw_text(PosX,PosY,"DistY: " + string(oReplaceDetect.DistanceFromY))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
