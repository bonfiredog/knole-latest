<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBody</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 4
OrigRotation = image_angle
OrigXRelative = x - oNecks.x
OrigYRelative = y - oNecks.y
MoveMod = 0
RotateMod = 0
Shake = false
RootedXOffset = x - oHoleBottom.x
RootedYOffset = y - oHoleBottom.y
DistNeckX = 5
DistNeckY = 64

Angle = point_direction(0,0,DistNeckX,DistNeckY)
Distance = point_distance(0,0,DistNeckX,DistNeckY)


PepperSys = part_system_create()
PepperEmit = part_emitter_create(PepperSys)
PepperPart = part_type_create()
part_type_sprite(PepperPart,sPepper,true,false,false)
part_type_size(PepperPart,0.05,0.3,0,0)
part_type_speed(PepperPart,0.1,1,-0.01,0)
part_type_direction(PepperPart,200,340,0,0)
part_type_gravity(PepperPart,0.2,270)
part_type_life(PepperPart,30,43)
alarm[0] = 0
Swinging = false
SwingAmount = 0
SwingReady = false
SwingMod = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(SavedX,SavedY,oPepperArea)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = oNecks.x + lengthdir_x(Distance,oNecks.image_angle + Angle)
y = oNecks.y + lengthdir_y(Distance,oNecks.image_angle + Angle)
image_angle = oNecks.image_angle + RotateMod

RotateMod = clamp(RotateMod,-30,30)

if oSarahHead.PickedUp = true {
if oMovementDetector.MoveSpeed &gt; 15 and oMovementDetector.VMove = "none" {
if oMovementDetector.HMove = "left" {
SwingReady = true
RotateMod += (15 / oMovementDetector.SpeedMax) * oMovementDetector.CurrentSpeed
} else if oMovementDetector.HMove = "right" {
SwingReady = true
RotateMod -= (15 / oMovementDetector.SpeedMax) * oMovementDetector.CurrentSpeed
} 
}

if oMovementDetector.HMove = "none" and SwingReady = true {
SwingReady = false
Swinging = true
SwingTimer = 15
if RotateMod &gt; 0 {
SwingMod = -1
} else if RotateMod &lt; 0 {
SwingMod = 1
}
}

if oMovementDetector.HMove = "none" {
if Swinging = true {
if SwingTimer &gt; 0 {
SwingTimer -= 1
RotateMod += (10 * SwingMod)
} else if SwingTimer &lt;= 0 {
if RotateMod &gt; 0 {
RotateMod -= 4
}
if RotateMod &lt; 0 {
RotateMod += 4
}
Swinging = false
}
} else if Swinging = false {
if RotateMod &gt; 0 {
RotateMod -= 3
}
if RotateMod &lt; 0 {
RotateMod += 3
}
}
}
}

//Pepper Spray


if oSarahHead.Rooted = false {
if oMovementDetector.VMove = "down" and oMovementDetector.MoveSpeed &gt; 20 and Shake = false {
Shake = true
SavedSpeed = oMovementDetector.MoveSpeed
}

if oMovementDetector.VMove = "none" and Shake = true {
PepperX = oReplaceDetect.x
PepperY = oReplaceDetect.y
SavedX = PepperX
SavedY = PepperY + 170
part_emitter_region(PepperSys,PepperEmit,PepperX - 38,PepperX + 38,PepperY - 20,PepperY + 20,ps_shape_ellipse,ps_distr_gaussian)
part_emitter_burst(PepperSys,PepperEmit,PepperPart,round(0.5 * SavedSpeed))
alarm[0] = 32
Shake = false
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Don't Draw Sprite

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
