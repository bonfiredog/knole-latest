<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShepherdHead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

depth = 1 - 0.00001
RootedX = x - oShepherdBody.x
RootedY = y - oShepherdBody.y
OriginalXScale = image_xscale
RootedAngle = image_angle

BlinkPercent = 0
BlinkTimer = random_range(50,200)
Blinking = "in"
UpWalkPercent = 0

RotateMod = 0
EyeX = x + lengthdir_x(15, 10 + image_angle)
EyeY = y + lengthdir_y(15, 10 + image_angle)
EyesShut = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep Rooted To Body With Facing

x = oShepherdBody.x + (RootedX + (((0.5 / 100) * UpWalkPercent)) + oShepherdParent.ShoutMod) * oShepherdParent.FacingScale
y = oShepherdBody.y + RootedY + ((0.5 / 100) * UpWalkPercent)
image_xscale = OriginalXScale * oShepherdParent.FacingScale




UpWalkPercent = clamp(UpWalkPercent,0,60)
RotateMod = clamp(RotateMod,-30,30)

if oShepherdParent.Facing = "right" {
RotateMod = angle_difference(RootedAngle,oShepherdParent.DesiredHeading)
RotateMod = clamp(RotateMod,-30,30)
image_angle = RootedAngle - RotateMod
} else if oShepherdParent.Facing = "left" {
RotateMod = angle_difference(180,oShepherdParent.DesiredHeading)
RotateMod = clamp(RotateMod,-30,30)
image_angle = RootedAngle - RotateMod
}

if oShepherdParent.Facing = "right" {
EyeX = x + lengthdir_x(6, 6 + image_angle)
EyeY = y + lengthdir_y(6, 6 + image_angle)
} else if oShepherdParent.Facing = "left" {
EyeX = x + lengthdir_x(6, (180 - 6) + image_angle)
EyeY = y + lengthdir_y(6, (180 - 6) + image_angle)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving With Walking

if oShepherdParent.State = "walking" {
if UpWalkPercent &lt; 100 {
UpWalkPercent += (1 * oShepherdParent.WalkingSpeed)
}
} else {
if UpWalkPercent &gt; 0 {
UpWalkPercent -= (1 * oShepherdParent.WalkingSpeed)
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blinking

if EyesShut = false {
if BlinkTimer &gt; 0 {
BlinkTimer -= 1
} else if BlinkTimer &lt;= 0 {
if Blinking = "in" {
if BlinkPercent &lt; 100 {
BlinkPercent += 50
} else if BlinkPercent = 100 {
Blinking = "out"
}
} else if Blinking = "out" {
if BlinkPercent &gt; 0 {
BlinkPercent -= 50
} else if BlinkPercent = 0 {
Blinking = "in"
BlinkTimer = random_range(50,200)
}
}
}
}

BlinkPercent = clamp(BlinkPercent,0,100)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Eyes

if EyesShut = true = "sleeping" {
CurrentEyes = sShepherdEyeSleep
} else {
CurrentEyes = sShepherdEye
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Don't Draw Sprite
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
